<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>no.ehealthresearch</groupId>
  <artifactId>dignitycare</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>dignitycare</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>


  <properties>
    
    <maven.compiler.source>17</maven.compiler.source>
	<maven.compiler.target>17</maven.compiler.target>
    <javafx.version>17.0.1</javafx.version>
    <javafx.maven.plugin.version>0.0.6</javafx.maven.plugin.version>
    
   
    <main-class>no.ehealthresearch.dignitycare.fastlege.App</main-class>
    
    <dependency.loc>dependency</dependency.loc>
   
    <launcherName>tess_analyzer</launcherName>
    <appName>tess_analyzer</appName>
    
    <windows.upgrade.uuid>bc25f2e3-4b1c-4d76-968e-48a57c001274</windows.upgrade.uuid>
    
    <jvm.modules>java.base,java.sql,java.xml,java.logging,java.management,java.desktop,java.naming,jdk.unsupported</jvm.modules>
    
    <slf4j.version>1.7.32</slf4j.version>
  </properties>

  <dependencies>
  	<dependency>
        <groupId>ca.uhn.hapi.fhir</groupId>
        <artifactId>hapi-fhir-structures-r4</artifactId>
        <version>5.3.2</version>
    </dependency>
    <dependency>
	    <groupId>com.lowagie</groupId>
	    <artifactId>itext</artifactId>
	    <version>2.1.7</version>
	</dependency>
  	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-lang3</artifactId>
	    <version>3.12.0</version>
	</dependency> 
  	<dependency>
        <groupId>org.apache.pdfbox</groupId>
        <artifactId>pdfbox</artifactId>
        <version>2.0.6</version>
	</dependency>
	<dependency>
      <groupId>org.openpnp</groupId>
      <artifactId>opencv</artifactId>
      <version>[4.3.0,)</version>
    </dependency>
	<dependency>
		<groupId>org.bytedeco</groupId>
	    <artifactId>tesseract-platform</artifactId>
	    <version>5.0.1-1.5.7</version>
	</dependency>		
	<dependency>
		<groupId>org.apache.logging.log4j</groupId>
		<artifactId>log4j-slf4j-impl</artifactId>
		<version>2.13.1</version>
	</dependency>
    <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>4.11</version>
	      <scope>test</scope>
    </dependency>
    <dependency>
	    <groupId>org.jsoup</groupId>
	    <artifactId>jsoup</artifactId>
	    <version>1.10.2</version>
	</dependency>
	<dependency>
	    <groupId>com.fasterxml.jackson.dataformat</groupId>
	    <artifactId>jackson-dataformat-xml</artifactId>
	    <version>2.9.0</version>
	</dependency>
    <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
    </dependency>
    <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-fxml</artifactId>
        <version>${javafx.version}</version>
    </dependency>
    
	<dependency>
	    <groupId>org.openjfx</groupId>
	    <artifactId>javafx-graphics</artifactId>
	    <version>${javafx.version}</version>
	</dependency>
  </dependencies>

  <build>
 	<resources>
      
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        
        <filtering>false</filtering>
      </resource>
  	</resources>
    
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            <configuration>
              	<source>${maven.compiler.source}</source>
   				<target>${maven.compiler.target}</target>
        		<compilerArgs>
          			<option>--add-exports</option>
		       		<option>javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED</option>
	       			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.scene.text=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.font=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.geom.transform=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.scene.shape=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.util=ALL-UNNAMED</option>
        		</compilerArgs>
      		</configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        	<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
              	<version>2.5.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- This copies all of the jar files declared by the Maven build into a single directory.
                        This makes it easy to assemble the final installer package -->
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
          
            <plugin>
                <!-- Put the application jar generated by the project into the dependency folder - the default folder
                for the maven-dependency-plugin output. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                   
                    <archive>
			          <manifest>
			            <addClasspath>true</addClasspath>
			            <classpathPrefix>${dependency.loc}/</classpathPrefix>
			            <mainClass>${main-class}</mainClass>
			          </manifest>
			        </archive>
                    
                </configuration>
            </plugin>
        
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
            <!-- Plugin to make working with JavaFX nicer. See https://github.com/openjfx/javafx-maven-plugin -->
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-maven-plugin</artifactId>
            <version>0.0.5</version>
            <configuration>
                <mainClass>${main-class}</mainClass>
                <options>
           
		           	<option>--add-exports</option>
		       		<option>javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED</option>
	       			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.scene.text=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.font=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.geom.transform=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.scene.shape=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED</option>
	      			
	      			<option>--add-exports</option>
	      			<option>javafx.graphics/com.sun.javafx.util=ALL-UNNAMED</option>
           
      			</options>
            </configuration>
        </plugin>
      </plugins>
    
  </build>
</project>
